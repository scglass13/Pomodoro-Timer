{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scgla\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\components\\\\SessionTitle.js\";\nimport React from \"react\";\nimport { secondsToDuration, minutesToDuration } from \"../../utils/duration\";\nexport default function SessionTitle({\n  session,\n  focusDuration\n}) {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 11\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for \", minutesToDuration(focusDuration), \":00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 11\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))));\n}","map":{"version":3,"sources":["C:/Users/scgla/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/components/SessionTitle.js"],"names":["React","secondsToDuration","minutesToDuration","SessionTitle","session","focusDuration","label","timeRemaining"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,EAA4BC,iBAA5B,QAAqD,sBAArD;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA,OAAF;AAAWC,EAAAA;AAAX,CAAtB,EAAkD;AAC/D,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OADH,aACGA,OADH,uBACGA,OAAO,CAAEE,KADZ,WACwBJ,iBAAiB,CAACG,aAAD,CADzC,gBAFF,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGJ,iBAAiB,CAACG,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEG,aAAV,CADpB,eANF,CADF,CAFF,CADF;AAiBD","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration, minutesToDuration } from \"../../utils/duration\";\r\n\r\nexport default function SessionTitle({ session, focusDuration }) {\r\n  return (\r\n    <div>\r\n      {/* ✔ TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/*  TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {session?.label} for {minutesToDuration(focusDuration)}:00 minutes\r\n          </h2>\r\n          {/* ✔ TODO: Update message below correctly format the time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {secondsToDuration(session?.timeRemaining)} remaining\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}