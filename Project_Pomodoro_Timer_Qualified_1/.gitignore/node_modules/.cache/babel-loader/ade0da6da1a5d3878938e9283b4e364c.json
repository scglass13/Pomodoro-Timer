{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scgla\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\Pomodoro.js\";\nimport React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport SessionTitle from \"./components/SessionTitle\";\nimport PlayStop from \"./components/PlayStop\";\nimport ProgressBar from './components/ProgressBar';\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  const elapsedSeconds = prevState.timeTotal - timeRemaining;\n  return { ...prevState,\n    timeRemaining,\n    percentComplete: elapsedSeconds / prevState.timeTotal * 100\n  };\n}\n\nfunction nextSession(focusDuration, breakDuration) {\n  return currentSession => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        duration: minutesToDuration(breakDuration),\n        timeRemaining: breakDuration * 60,\n        percentComplete: 0\n      };\n    }\n\n    return {\n      label: \"Focusing\",\n      duration: minutesToDuration(focusDuration),\n      timeRemaining: focusDuration * 60,\n      percentComplete: 0\n    };\n  };\n}\n\nfunction Pomodoro() {\n  const [timerState, setTimerState] = useState(initialTimerState);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [session, setSession] = useState(null);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [sessionInfo, setSessionInfo] = useState(\"none\");\n  const [timeRemaining, setTimeRemaining] = useState(focusDuration);\n  const [progressPercent, setProgressPercent] = useState(0);\n  const style = !session ? {\n    display: 'none'\n  } : {\n    display: null\n  };\n  useInterval(() => {\n    if (session.timeRemaining === 0) {\n      new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n      return setSession(nextSession(focusDuration, breakDuration));\n    }\n\n    return setSession(nextTick);\n  }, isTimerRunning ? 1000 : null);\n\n  const stop = () => {\n    setIsTimerRunning(false);\n    setSession(null);\n  };\n\n  function findProgressPercent() {\n    let percent;\n\n    if (session) {\n      percent = Math.round((breakDuration - timeRemaining) * 100 / breakDuration);\n    } else {\n      percent = Math.round((focusDuration - timeRemaining) * 100 / focusDuration);\n    }\n\n    setProgressPercent(percent);\n  }\n\n  function playPause() {\n    setIsTimerRunning(prevState => {\n      const nextState = !prevState;\n\n      if (nextState) {\n        setSession(prevStateSession => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            setSessionInfo(null);\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60\n            };\n          }\n\n          return prevStateSession;\n        });\n      }\n\n      return nextState;\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"pomodoro\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }\n  }, \"Focus Duration: \", minutesToDuration(focusDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setFocusDuration(Math.max(focusDuration - 5, 5));\n    },\n    disabled: session,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 17\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setFocusDuration(Math.min(focusDuration + 5, 60));\n    },\n    disabled: session,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-focus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 17\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"float-right\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group input-group-lg mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"input-group-text\",\n    \"data-testid\": \"duration-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 15\n    }\n  }, \"Break Duration: \", minutesToDuration(breakDuration)), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"input-group-append\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setBreakDuration(Math.max(breakDuration - 1, 1));\n    },\n    disabled: session,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"decrease-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-minus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 19\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setBreakDuration(Math.min(breakDuration + 1, 15));\n    },\n    disabled: session,\n    type: \"button\",\n    className: \"btn btn-secondary\",\n    \"data-testid\": \"increase-break\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"oi oi-plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 19\n    }\n  }))))))), /*#__PURE__*/React.createElement(PlayStop, {\n    stop: stop,\n    playPause: playPause,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SessionTitle, {\n    session: session,\n    percent: findProgressPercent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(ProgressBar, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Pomodoro;","map":{"version":3,"sources":["C:/Users/scgla/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/Pomodoro.js"],"names":["React","useState","classNames","useInterval","minutesToDuration","secondsToDuration","SessionTitle","PlayStop","ProgressBar","nextTick","prevState","timeRemaining","Math","max","elapsedSeconds","timeTotal","percentComplete","nextSession","focusDuration","breakDuration","currentSession","label","duration","Pomodoro","timerState","setTimerState","initialTimerState","isTimerRunning","setIsTimerRunning","session","setSession","setFocusDuration","setBreakDuration","sessionInfo","setSessionInfo","setTimeRemaining","progressPercent","setProgressPercent","style","display","Audio","play","stop","findProgressPercent","percent","round","playPause","nextState","prevStateSession","min"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport classNames from \"../utils/class-names\";\nimport useInterval from \"../utils/useInterval\";\nimport { minutesToDuration, secondsToDuration } from \"../utils/duration\";\nimport SessionTitle from \"./components/SessionTitle\";\nimport PlayStop from \"./components/PlayStop\";\nimport ProgressBar from './components/ProgressBar'\n\n\n\nfunction nextTick(prevState) {\n  const timeRemaining = Math.max(0, prevState.timeRemaining - 1);\n  const elapsedSeconds = prevState.timeTotal - timeRemaining;\n  return {\n    ...prevState,\n    timeRemaining,\n    percentComplete: (elapsedSeconds / prevState.timeTotal) * 100,\n  };\n}\n\nfunction nextSession(focusDuration, breakDuration) {\n  return (currentSession) => {\n    if (currentSession.label === \"Focusing\") {\n      return {\n        label: \"On Break\",\n        duration: minutesToDuration(breakDuration),\n        timeRemaining: breakDuration * 60,\n        percentComplete: 0,\n      };\n    }\n    return {\n      label: \"Focusing\",\n      duration: minutesToDuration(focusDuration),\n      timeRemaining: focusDuration * 60,\n      percentComplete: 0,\n    };\n  };\n}\n\nfunction Pomodoro() {\n\n  const [timerState, setTimerState] = useState(initialTimerState);\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\n  const [session, setSession] = useState(null);\n  const [focusDuration, setFocusDuration] = useState(25);\n  const [breakDuration, setBreakDuration] = useState(5);\n  const [sessionInfo, setSessionInfo] = useState(\"none\");\n  const [timeRemaining, setTimeRemaining] = useState(focusDuration);\n  const [progressPercent, setProgressPercent] = useState(0);\n\n  const style = !session ? {display: 'none'} : {display: null};\n\n  useInterval(\n    () => {\n      if (session.timeRemaining === 0) {\n        new Audio(\"https://bigsoundbank.com/UPLOAD/mp3/1482.mp3\").play();\n        return setSession(nextSession(focusDuration, breakDuration));\n      }\n      return setSession(nextTick);\n    },\n    isTimerRunning ? 1000 : null\n  );\n\n  const stop = () => {\n    setIsTimerRunning(false);\n    setSession(null);\n  };\n\n  function findProgressPercent() {\n    let percent;\n    if (session) {\n      percent = Math.round(\n        ((breakDuration - timeRemaining) * 100) / breakDuration\n      );\n    } else {\n      percent = Math.round(\n        ((focusDuration - timeRemaining) * 100) / focusDuration\n      );\n    }\n    setProgressPercent(percent);\n  }\n\n  function playPause() {\n    setIsTimerRunning((prevState) => {\n      const nextState = !prevState;\n      if (nextState) {\n        setSession((prevStateSession) => {\n          // If the timer is starting and the previous session is null,\n          // start a focusing session.\n          if (prevStateSession === null) {\n            setSessionInfo(null);\n            return {\n              label: \"Focusing\",\n              timeRemaining: focusDuration * 60,\n            };\n          }\n          return prevStateSession;\n        });\n      }\n      return nextState;\n    });\n  }\n\n  return (\n    <div className=\"pomodoro\">\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"input-group input-group-lg mb-2\">\n            <span className=\"input-group-text\" data-testid=\"duration-focus\">\n              {/* ✔ TODO: Update this text to display the current focus session duration */}\n              Focus Duration: {minutesToDuration(focusDuration)}\n            </span>\n            <div className=\"input-group-append\">\n              {/* ✔ TODO: Implement decreasing focus duration and disable during a focus or break session */}\n              <button\n                onClick={() => {\n                  setFocusDuration(Math.max(focusDuration - 5, 5));\n                }}\n                disabled={session}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"decrease-focus\"\n              >\n                <span className=\"oi oi-minus\" />\n              </button>\n              {/* ✔ TODO: Implement increasing focus duration  and disable during a focus or break session */}\n              <button\n                onClick={() => {\n                  setFocusDuration(Math.min(focusDuration + 5, 60));\n                }}\n                disabled={session}\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                data-testid=\"increase-focus\"\n              >\n                <span className=\"oi oi-plus\" />\n              </button>\n            </div>\n          </div>\n        </div>\n        <div className=\"col\">\n          <div className=\"float-right\">\n            <div className=\"input-group input-group-lg mb-2\">\n              <span className=\"input-group-text\" data-testid=\"duration-break\">\n                {/* ✔ TODO: Update this text to display the current break session duration */}\n                Break Duration: {minutesToDuration(breakDuration)}\n              </span>\n              <div className=\"input-group-append\">\n                {/* ✔ TODO: Implement decreasing break duration and disable during a focus or break session*/}\n                <button\n                  onClick={() => {\n                    setBreakDuration(Math.max(breakDuration - 1, 1));\n                  }}\n                  disabled={session}\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"decrease-break\"\n                >\n                  <span className=\"oi oi-minus\" />\n                </button>\n                {/* ✔ TODO: Implement increasing break duration and disable during a focus or break session*/}\n                <button\n                  onClick={() => {\n                    setBreakDuration(Math.min(breakDuration + 1, 15));\n                  }}\n                  disabled={session}\n                  type=\"button\"\n                  className=\"btn btn-secondary\"\n                  data-testid=\"increase-break\"\n                >\n                  <span className=\"oi oi-plus\" />\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <PlayStop stop={stop} playPause={playPause} />\n      <div style={style}>\n        <SessionTitle session={session} percent={findProgressPercent} />\n        <ProgressBar />\n      </div>\n    </div>\n  );\n}\n\nexport default Pomodoro;\n"]},"metadata":{},"sourceType":"module"}