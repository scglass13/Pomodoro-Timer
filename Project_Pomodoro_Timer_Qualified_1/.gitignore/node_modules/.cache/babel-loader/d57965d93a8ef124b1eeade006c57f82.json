{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scgla\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\components\\\\SessionTitle.js\";\nimport React, { useState } from 'react';\nimport { secondsToDuration } from '../../utils/duration';\nexport default function SessionTitle({\n  session\n}) {\n  /* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */\n  const [sessionInfo, setSessionInfo] = useState('none');\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for 25:00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\")));\n}","map":{"version":3,"sources":["C:/Users/scgla/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/components/SessionTitle.js"],"names":["React","useState","secondsToDuration","SessionTitle","session","sessionInfo","setSessionInfo","label","timeRemaining"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,eAAe,SAASC,YAAT,CAAsB;AAAEC,EAAAA;AAAF,CAAtB,EAAmC;AAC9C;AACA,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCL,QAAQ,CAAC,MAAD,CAA9C;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGG,OADH,aACGA,OADH,uBACGA,OAAO,CAAEG,KADZ,uBAFF,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGL,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAEI,aAAV,CADpB,eANF,CADA,CADF;AAcH","sourcesContent":["import React, {useState} from 'react';\r\nimport { secondsToDuration } from '../../utils/duration';\r\n\r\nexport default function SessionTitle({ session }) {\r\n    /* TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */\r\n    const [sessionInfo, setSessionInfo] = useState('none');\r\n    return (\r\n      <div className=\"row mb-2\">\r\n      <div className=\"col\">\r\n        {/* TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n        <h2 data-testid=\"session-title\">\r\n          {session?.label} for 25:00 minutes\r\n        </h2>\r\n        {/* âœ” TODO: Update message below correctly format the time remaining in the current session */}\r\n        <p className=\"lead\" data-testid=\"session-sub-title\">\r\n          {secondsToDuration(session?.timeRemaining)} remaining\r\n        </p>\r\n      </div>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}