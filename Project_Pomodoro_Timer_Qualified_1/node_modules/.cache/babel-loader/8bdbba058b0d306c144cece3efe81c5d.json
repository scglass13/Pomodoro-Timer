{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\scgla\\\\Thinkful\\\\qualified-challenges\\\\Project_Pomodoro_Timer_Qualified_1\\\\src\\\\pomodoro\\\\components\\\\SessionTitle.js\";\nimport React from \"react\";\nimport { secondsToDuration } from \"../../utils/duration\";\nexport default function SessionTitle({\n  session,\n  percentage,\n  sessionInfo,\n  nextSession,\n  focusDuration,\n  breakDuration\n}) {\n  const style = !session ? {\n    display: \"none\"\n  } : {\n    display: null\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: style,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    \"data-testid\": \"session-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 11\n    }\n  }, session === null || session === void 0 ? void 0 : session.label, \" for 25:00 minutes\"), /*#__PURE__*/React.createElement(\"p\", {\n    className: \"lead\",\n    \"data-testid\": \"session-sub-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 11\n    }\n  }, secondsToDuration(session === null || session === void 0 ? void 0 : session.timeRemaining), \" remaining\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress\",\n    style: {\n      height: \"20px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"progress-bar\",\n    role: \"progressbar\",\n    \"aria-valuemin\": \"0\",\n    \"aria-valuemax\": \"100\" // TODO: Increase aria-valuenow as elapsed time increases\n    ,\n    \"aria-valuenow\": 100 - 100 * (session === null || session === void 0 ? void 0 : session.timeRemaining) / ((session === null || session === void 0 ? void 0 : session.label) === \"Focusing\" ? focusDuration * 60 : breakDuration * 60) // TODO: Increase width % as elapsed time increases\n    ,\n    style: {\n      width: `${100 - 100 * session.timeRemaining / (session.label === \"Focusing\" ? focusDuration * 60 : breakDuration * 60)}%`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  })))));\n}","map":{"version":3,"sources":["C:/Users/scgla/Thinkful/qualified-challenges/Project_Pomodoro_Timer_Qualified_1/src/pomodoro/components/SessionTitle.js"],"names":["React","secondsToDuration","SessionTitle","session","percentage","sessionInfo","nextSession","focusDuration","breakDuration","style","display","label","timeRemaining","height","width"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AAEA,eAAe,SAASC,YAAT,CAAsB;AACnCC,EAAAA,OADmC;AAEnCC,EAAAA,UAFmC;AAGnCC,EAAAA,WAHmC;AAInCC,EAAAA,WAJmC;AAKnCC,EAAAA,aALmC;AAMnCC,EAAAA;AANmC,CAAtB,EAOZ;AACD,QAAMC,KAAK,GAAG,CAACN,OAAD,GAAW;AAAEO,IAAAA,OAAO,EAAE;AAAX,GAAX,GAAiC;AAAEA,IAAAA,OAAO,EAAE;AAAX,GAA/C;AAEA,sBACE;AAAK,IAAA,KAAK,EAAED,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAI,mBAAY,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGN,OADH,aACGA,OADH,uBACGA,OAAO,CAAEQ,KADZ,uBAFF,eAME;AAAG,IAAA,SAAS,EAAC,MAAb;AAAoB,mBAAY,mBAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGV,iBAAiB,CAACE,OAAD,aAACA,OAAD,uBAACA,OAAO,CAAES,aAAV,CADpB,eANF,CADF,CAFF,eAcE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAA0B,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,IAAI,EAAC,aAFP;AAGE,qBAAc,GAHhB;AAIE,qBAAc,KAJhB,CAKE;AALF;AAME,qBACE,MACC,OAAMV,OAAN,aAAMA,OAAN,uBAAMA,OAAO,CAAES,aAAf,CAAD,IACG,CAAAT,OAAO,SAAP,IAAAA,OAAO,WAAP,YAAAA,OAAO,CAAEQ,KAAT,MAAmB,UAAnB,GACGJ,aAAa,GAAG,EADnB,GAEGC,aAAa,GAAG,EAHtB,CARJ,CAaE;AAbF;AAcE,IAAA,KAAK,EAAE;AACLM,MAAAA,KAAK,EAAG,GACN,MACC,MAAMX,OAAO,CAACS,aAAf,IACGT,OAAO,CAACQ,KAAR,KAAkB,UAAlB,GACGJ,aAAa,GAAG,EADnB,GAEGC,aAAa,GAAG,EAHtB,CAID;AAPI,KAdT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CAdF,CADF;AA+CD","sourcesContent":["import React from \"react\";\r\nimport { secondsToDuration } from \"../../utils/duration\";\r\n\r\nexport default function SessionTitle({\r\n  session,\r\n  percentage,\r\n  sessionInfo,\r\n  nextSession,\r\n  focusDuration,\r\n  breakDuration,\r\n}) {\r\n  const style = !session ? { display: \"none\" } : { display: null };\r\n\r\n  return (\r\n    <div style={style}>\r\n      {/* ✔ TODO: This area should show only when there is an active focus or break - i.e. the session is running or is paused */}\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          {/*  TODO: Update message below to include current session (Focusing or On Break) total duration */}\r\n          <h2 data-testid=\"session-title\">\r\n            {session?.label} for 25:00 minutes\r\n          </h2>\r\n          {/* ✔ TODO: Update message below correctly format the time remaining in the current session */}\r\n          <p className=\"lead\" data-testid=\"session-sub-title\">\r\n            {secondsToDuration(session?.timeRemaining)} remaining\r\n          </p>\r\n        </div>\r\n      </div>\r\n      <div className=\"row mb-2\">\r\n        <div className=\"col\">\r\n          <div className=\"progress\" style={{ height: \"20px\" }}>\r\n            <div\r\n              className=\"progress-bar\"\r\n              role=\"progressbar\"\r\n              aria-valuemin=\"0\"\r\n              aria-valuemax=\"100\"\r\n              // TODO: Increase aria-valuenow as elapsed time increases\r\n              aria-valuenow={\r\n                100 -\r\n                (100 * session?.timeRemaining) /\r\n                  (session?.label === \"Focusing\"\r\n                    ? focusDuration * 60\r\n                    : breakDuration * 60)\r\n              }\r\n              // TODO: Increase width % as elapsed time increases\r\n              style={{\r\n                width: `${\r\n                  100 -\r\n                  (100 * session.timeRemaining) /\r\n                    (session.label === \"Focusing\"\r\n                      ? focusDuration * 60\r\n                      : breakDuration * 60)\r\n                }%`,\r\n              }}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}